//code by bitluni (send me a high five if you like the code)

#include "sample.h" 
//replace this include file by your header file generated by the conversion tool found 
//here: https://bitluni.net/wp-content/uploads/2018/01/Audio2Header.html

#include <driver/dac.h>
#include <Adafruit_NeoPixel.h>

const int MOTION_PIN = 4;
const int LED_PIN = 15;
const int LED_COUNT = 10;

bool play = false;

Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ400);

void showTask(void *param)
{
  while(true)
  {
    if(play)
    {
      int c = ((millis() >> 5) & 1) * 255;
      for(int i = 0; i < LED_COUNT; i++) 
      {
        strip.setPixelColor(i, strip.Color(c, c, c));        
      }
      strip.show(); 
    }
    else
    {
      for(int i = 0; i < LED_COUNT; i++) 
      {
        float f = sin(millis() * 0.002f + (i * 0.628));
        int c = max(0, (int)(f * f * f * 255));
        strip.setPixelColor(i, strip.Color(0, c, 0)); 
      }
      strip.show();       
    }
    delay(10);
  }
}

void setup() 
{
  pinMode(LED_PIN, OUTPUT);
  pinMode(MOTION_PIN, INPUT);
  Serial.begin(115200);
  dac_output_enable(DAC_CHANNEL_1);
  dac_output_voltage(DAC_CHANNEL_1, 128); 
  strip.begin();
  strip.show(); 
  strip.setBrightness(255);
  TaskHandle_t xHandle = NULL;
  xTaskCreatePinnedToCore(showTask, "show", 5000, 0,  ( 2 | portPRIVILEGE_BIT ), &xHandle, 0);
}

void loop() 
{
  static unsigned long startTime = 0;
  static unsigned long coolDown = 0;
  if(digitalRead(MOTION_PIN) && !play && millis() >= coolDown)
  {
    play = true;
    startTime = micros();
  } 
  if(play)
  {
    unsigned long pos = (micros() - startTime) / (1000000 / sampleRate);
    if(pos < sampleCount)
      dac_output_voltage(DAC_CHANNEL_1, (int)samples[pos] + 128);
    else
    {
      play = false;
      coolDown = millis() + 5000;
    } 
  }
}
